# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        name: Checkout
        uses: actions/checkout@v2
      
      # Download & install nodes
      -
        name: Setup Node
        uses: actions/setup-node@v1

      # Install project dev dependencies
      -
        name: Bootstrap Install
        run: npm install

      # Tests
      - 
        name: Test Foundation
        run: npx jskit test Tests/FoundationTests

      - 
        name: Test TestKit
        run: npx jskit test Tests/TestKitTests

      - 
        name: Test SecurityKit
        run: npx jskit test Tests/SecurityKitTests

      - 
        name: Test Dispatch
        run: npx jskit test Tests/DispatchTests

      - 
        name: Test DOM
        run: npx jskit test Tests/DOMTests

      - 
        name: Test ImageKit
        run: npx jskit test Tests/ImageKitTests

      - 
        name: Test FontKit
        run: npx jskit test Tests/FontKitTests

      - 
        name: Test PDFKit
        run: npx jskit test Tests/PDFKitTests

      - 
        name: Test AuthKit
        run: npx jskit test Tests/AuthKitTests

      - 
        name: Test DBKit
        run: npx jskit test Tests/DBKitTests

      - 
        name: Test ServerKit
        run: npx jskit test Tests/ServerKitTests

      - 
        name: Test UIKit
        run: npx jskit test Tests/UIKitTests

      - 
        name: Test jskit
        run: npx jskit test Tests/jskitTests
