copyright: Copyright Â© 2020 Breakside Inc.
kind: class
introduced: 2020.1.0
inherits: JSObject
implements:
  - UIAccessibility
summary: The single application that runs all of the user interface
description: |
  A `UIApplication` is created automatically by the `UIKit` boostrap code.

  Your responsibility is to create a class that impelements the
  `UIApplicationDelegate` protocol, which receives calls when the application
  launches.
topics:
  -
    name: Running Application
    members:
      -
        name: shared
        static: true
        type: UIApplication
        summary: The instance of the running application
  -
    name: Info File
    members:
      - UIApplicationInfo
  -
    name: Delegate
    members:
      -
        name: UIApplicationDelegate
        kind: protocol
        summary: A delgate for important application events like launch
        topics:
          -
            name: Application Lifecyle
            members:
              -
                name: applicationDidFinishLaunching
                summary: Called when the application launches successfully
                arguments:
                  -
                    name: application
                    type: UIApplication
                    summary: The application that launched
                  -
                    name: launchOptions
                    type: JSArguments
                    summary: Any arguments passed to the application
                description: |
                  For web-based `UIApplication`s, `launchOptions` are passed
                  via the URL fragment.

                  The allowed options are specified in the
                  `UIApplicationLaunchOptions` entry in the application's
                  [Info](UIApplicationInfo) file.
              -
                name: applicationWillTerminate
                summary: Called when the application will terminate
                arguments:
                  -
                    name: completion
                    type: function()
                    summary: You must call the completion function when
                      your `applicationWillTerminate` method is done saving
                      anything that needs to be saved.
                description: |
                  Gives the application delegate a chance to perform tasks
                  like saving data, before the application closes.

                  ````
                  JSClass("ApplicationDelegate", JSObject, {

                    applicationWillTerminate: function(completion){
                      saveApplicationData().then(completion);
                    }

                  });
                  ````
              -
                name: applicationShouldWarnBeforeExit
                introduced: 2021.6.0
                environment: html
                summary: Called for HTML applications when the user is closing the page
                type: boolean
                return: \`true` if you want the browser to prompt the user before the page closes
                arguments:
                  -
                    name: application
                    type: UIApplication
                    summary: The application
                description: |
                  Typically used to prevent the user from losing unsaved changes.
                note: Browsers don't allow any customization of the message shown to users,
                  and might ingore the request if they don't think the user has interacted
                  with the page.
              -
                name: applicationDidCrash
                introduced: 2020.8.0
                summary: Called when an unhandled exception or promise rejection occurs
                  within the application's code
                arguments:
                  -
                    name: application
                    type: UIApplication
                    summary: The application
                  -
                    name: error
                    type: Error
                    summary: The uncaught error that caused the crash
                  -
                    name: logs
                    type: JSLogRecord[]
                    summary: The recent logs from the application's loggers
                      leading up to the crash
          -
            name: Application State
            members:
              -
                name: applicationDidRequestState
                introduced: 2021.28.0
                beta: true
                kind: method
                type: UIState
                nullable: true
                summary: Called when an external action requests a new
                  application state
                arguments:
                  - name: application
                    type: UIApplication
                    summary: The application that has an update
                  - name: state
                    type: UIState
                    summary: The requested state
                description: |
                  For HTML applications, this will be called when a user edits
                  the page's URL.

                  If the requested state is valid, the delegate must return it
                  to indicate the request is granted.

                  If the state is invalid, the delegate can return any other
                  state, or `null` to indicate that that the request is denied.
          -
            name: Application Updates
            members:
              -
                name: applicationUpdateAvailable
                kind: method
                summary: Called when an update is available
                arguments:
                  - name: application
                    type: UIApplication
                    summary: The application that has an update
                description: |
                  Gives the application a change to notify the user ang give
                  them a choice of when to update.

                  Call `UIApplication.update()` to install the update.
      -
        name: delegate
        type: UIApplicationDelegate
        summary: The application's delegate
        description: |
          The application delegate is set via the [Info](UIApplicationInfo)
          file, either via the `UIApplicationDelegate` property or as the
          `File's Owner` in the `UIMainSpec` specfile.

          An application delegate typically directs and manages the top level
          application functions like

          - Establishing a root window to display
          - Setting up `JSUserDefaults`
  -
    name: Windows
    members:
      -
        name: mainWindow
        type: UIWindow
        summary: The application's current "main window"
        description: |
          The main window is the active window.  It is usually styled
          differently than inactive windows.
      -
        name: keyWindow
        type: UIWindow
        summary: The application's current "key window"
        description: |
          The key window receives keyboard input and is often the same as the
          `mainWindow`, although the two can be different in cases where the
          key window is not allowed to become a main window.
      -
        name: windows
        type: UIWindow[]
        summary: The application's window stack
        description: |
          The window stack is ordered in the same manner as the windows are
          visible, with the top visible window at the end of the stack.
  -
    name: Menus
    members:
      -
        name: mainMenu
        type: UIMenu
        summary: The application's menu that gets shown in the main menu bar
      -
        introduced: 2020.30.3
        name: shortcutMenu
        type: UIMenu
        summary: For applications that don't show a main menu, but still want to
          allow keyboard shortcuts that work anywhere
        description: |
          The user never sees this menu, but any shortcut key combinations that
          the menu's items define will be processed just like those for a
          visible `mainMenu`
  -
    name: Application State
    members:
      -
        name: state
        introduced: 2021.28.0
        type: UIState
        beta: true
        summary: The current state of the application
        description: |
          The application's intial state is set before calling
          `applicationDidFinishLaunching()`, allowing the application `delegate`
          to inspect the state and show the approprate screen for that state.

          If the state changes, for example by chaning the URL in an HTML
          application, `applicationDidRequestState()` is called on the
          `delegate`, giving the delegate an opportunity to change screens
          based on the newly requested state.

          As the user navigates through an application, you can set a new
          value to this state, which will result in an updated URL in an HTML
          application.
  -
    name: Opening URLs
    members:
      -
        name: openURL
        kind: method
        summary: Open the URL
        arguments:
          -
            name: url
            type: JSURL
            summary: The url to open
        description: |
          For web based applications, the URL will open in a new browser window
          and the browser's default behavior for that resource type will be
          invoked.
  -
    name: Updates
    members:
      -
        name: update
        kind: method
        summary: Update the application
        description: |
          Will call `applicationWillTerminate()` on the `delegate`.
  -
    name: Events
    members:
      -
        name: sendEvent
        kind: method
        summary: Send an event to the application
        arguments:
          -
            name: event
            type: UIEvent
            summary: The event that occurred
        description: |
          Called by lower level platform managers when an event relevant to the
          application occurs.

          The application inspects the event using the following steps:
          1. If the event is a keyboard shortcut for a main menu item,
             the event is sent to the `mainMenu`
          2. Otherwise, the event is sent to each window in its
             `windows`(UIEvent.windows) property.
        note: Typically not called manually
      -
        name: sendAction
        kind: method
        summary: Send an action to the best responder
        arguments:
          -
            name: action
            type: String
            summary: The method name to invoke on the responder
          -
            name: target
            type: UIResponder
            default: "null"
            summary: The optional responder for the action.  If `null`, use the result
              of `firstTargetForAction(action)`.
          -
            name: sender
            type: any
            default: "this"
            summary: The optional sender of the action.  If unspecified, use 
              this `UIApplication`.
          -
            name: event
            type: UIEvent
            default: "null"
            summary: The optional event that triggered the action.
        description: |
          If no target is specified, the application will search the responder
          chain to find a suitable target responder.  This search is done
          via `firstTargetForAction()`.
      -
        name: sendAction
        kind: method
        suffix: function
        summary: Invoke an action function with the given target
        arguments:
          -
            name: action
            type: function
            summary: The action function to invoke
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when inoking the action
          -
            name: sender
            type: any
            default: "this"
            summary: The optional sender of the action.  If unspecified, use 
              this `UIApplication`.
          -
            name: event
            type: UIEvent
            default: "null"
            summary: The optional event that triggered the action.
        description: |
          In addition to accepting actions in the form of method names,
          `UIApplication` also accepts `function` objects that can be invoked
          directly.  In this case, the responder chain is not considered.
      -
        name: firstTargetForAction
        kind: method
        summary: Find the first target in the responder chain for the action
        type: UIResponder
        return: The top responder in the responder chain that handles the action
        arguments:
          -
            name: action
            type: String
            summary: The method name to invoke on the responder
          -
            name: target
            type: UIResponder
            summary: |
              The responder for the action.  If `null`, the start of the
              responder chain will be the `mainWindow`'s 
              `firstResponder`(UIWindow.firstResponder) or the
              `mainWindow` itself.  Othewise, the responder chain will start
              with `target`.
            note: If nothing in the responder chain can handle the action,
              the application's `delegate` will be checked.
          -
            name: sender
            type: any
            summary: The sender of the action
        description: |
          Loop up the responder chain starting from `target` until a responder
          is found that responds to the `action`.
  -
    name: Environment
    summary:
      -
        name: environment
        introduced: 2021.8.4
        type: JSEnvironment
        summary: The application's environment
        description: |
          For HTML-based applications, which run as completely static
          code, the environment is established at build time.

          For debug builds, a local `.env`() file is used by default, or
          you can specify a different file with the `--env`(make.--env) flag.

          For non-debug builds, the filename in `HTMLProductionEnvironment` is
          used, relative to the project directory. It defaults to `production.env`.
          You can specify a different file with the `--env`(make.--env) flag.
        important: For HTML applications, all environment variables are visble
          to anyone inpsecting the published code, so take care to only include
          non-secret configuration varaibles.
  -
    name: HTML Based Applicatons
    summary:
      -
        name: baseURL
        type: JSURL
        summary: The URL used to access your application