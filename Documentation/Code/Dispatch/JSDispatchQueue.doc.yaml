copyright: Copyright Â© 2020 Breakside Inc.
kind: class
introduced: 2020.1.0
inherits: JSObject
summary: Manage a list of jobs to be executed in sequential order
topics:
  -
    name: Default Queues
    members:
      -
        name: background
        static: true
        type: JSDispatchQueue
        summary: The default queue for background jobs
        description: |
          Background jobs do not block the user interface or main application
          loop.

          This is useful for computationally expensive jobs that would otherwise
          take too much time on the main loop, preventing anything else from
          running.

          While you can create your own queues, the `background` queue is the
          simplest way to get started with dispatched jobs.
  -
    name: Creating a Queue
    members:
      -
        name: init
        kind: init
        summary: Create a new queue
        description: |
          Queue jobs will be performed serially
  -
    name: Running Jobs
    members:
      -
        name: enqueue
        kind: method
        summary: Add a job to the queue and receive a callback when it completes
        arguments:
          -
            name: jobClass
            type: JSClass
            summary: The `JSDispatchJob` subclass that will be created by the
              queue when it's time to run the job
          -
            name: args
            type: any[]
            summary: The arguments that will be passed to the `jobClass`
              instanace when it is initiated
          -
            name: completion
            type:
              arguments:
                -
                  name: error
                  type: Error
                  nullable: true
                  summary: Any error that occurred.  `null` indicates success.
                -
                  name: args
                  type: any
                  variable: true
                  summary: Any values passed back by the job.  User defined.
            summary: Called when the job complete
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when calling `successCallback`
              or `errorCallback`
      -
        name: enqueue
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: any
            summary: Any values passed back by the job.  User defined.
        summary: Add a job to the queue and return a promise that resolevs when
          the job completes
        arguments:
          -
            name: jobClass
            type: JSClass
            summary: The `JSDispatchJob` subclass that will be created by the
              queue when it's time to run the job
          -
            name: args
            type: any[]
            summary: The arguments that will be passed to the `jobClass`
              instanace when it is initiated