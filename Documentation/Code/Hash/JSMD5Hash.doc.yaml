copyright: Copyright Â© 2020 Breakside Inc.
kind: class
suffix: class
introduced: 2020.1.0
summary: An MD5 hash function
description: |
  MD5 hashes can be used for calculating sums for non-security related purposes,
  like comparing two files or creating unique identifiers.
important: If you are hashing data for secure purposes, then use the `SECHash`
  class from the `SecurityKit` framework.  The `MD5` hash function is not
  secure.
topics:
  -
    name: Creating a Hasher
    members:
      -
        name: JSMD5Hash
        kind: constructor
        summary: Create a hasher
        description: |
          After creating a hasher, you can `add()` as many cunks of data
          as you want before calling `finish()`.

          ````
          var chunks = [ ... ];
          var md5 = new JSMD5Hash();
          for (var i = 0, l = chunks.length; i < l; ++i){
            md5.add(chunks[i]);
          }
          md5.finish();
          var hex = md5.digest().hexStringRepresentation();
          ````
        important: This constructor must be invoked with `new`().
  -
    name: Adding Data
    members:
      -
        name: add
        kind: method
        summary: Add a chunk of data to the hash calculation
        arguments:
          -
            name: data
            type: JSData
            summary: The data chunck to include in the hash
        description: |
          You must call `finish()` after calling `add()` for the final time.
      -
        name: finish
        kind: method
        summary: Complete the hash calculation
        description: |
          You'll typically call `digest()` after calling `finish()`, in order
          to get the result of the hash.
  -
    name: Hash Result
    members:
      -
        name: digest
        kind: method
        type: JSData
        return: A 16-byte (128 bit) hash of the input data
        summary: Get the result of hashing all the data chunks
        note: |
          You can call `hexStringRepresentation()` on the result to generate
          a string form of the MD5 hash.