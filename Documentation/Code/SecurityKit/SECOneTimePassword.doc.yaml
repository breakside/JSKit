copyright: Copyright Â© 2020 Breakside Inc.
kind: class
inherits: JSObject
introduced: 2020.29.0
summary: Time-based one-time password, often used for two-factor authentication (2fa)
description: |
  Implements the standard time-based one-time password algorithm defined in
  [RFC 6238](https://tools.ietf.org/html/rfc6238).

  Widely used by sign in services for two-factor authentication (2fa) and used
  in clients like Google Authenticator or Authy.
topics:
  -
    name: Creating a One-Time Password
    members:
      -
        name: init
        kind: init
        summary: Create a new one-time password with a 6 digit token length
        description: |
          Equivalent to calling `initWithNumberOfDigits(6)`.
      -
        name: initWithNumberOfDigits
        kind: init
        summary: Create a new one-time password with the given number of digits
          in the generated tokens
        arguments:
          -
            name: numberOfDigits
            type: Number
            summary: The desired length of generated tokens
          -
            name: timePeriod
            type: Number
            default: 30
            summary: The number of seconds to use for the time window (see spec)
          -
            name: startDate
            type: JSDate
            default: JSDate.unixEpoch
            summary: The date to use a the starting point for calculations
        description: |
          Useful when you want a different number of digits than the default 6.
        note: |
          Some clients only support certain values the number of token digits,
          the time period, and the start time
      -
        name: initWithSecret
        kind: init
        summary: Create a one-time password with previously-generated secret
          key data
        arguments:
          -
            name: secret
            type: JSData
            summary: The previously generated secret key data
          -
            name: numberOfDigits
            type: Number
            summary: The desired length of generated tokens
            default: 6
          -
            name: timePeriod
            type: Number
            default: 30
            summary: The number of seconds to use for the time window (see spec)
          -
            name: startDate
            type: JSDate
            default: JSDate.unixEpoch
            summary: The date to use a the starting point for calculations
      -
        name: initWithDictionary
        kind: init
        summary: Create a password from a dictionary of values previously
          generated by `dictionaryRepresentation()`
        arguments:
          -
            name: dictionary
            type: DictionaryRepresentation
            summary: A dictionary of properties previously generated by `dictionaryRepresentation()`
  -
    name: Generating & Verifying Tokens
    members:
      -
        name: generateToken
        kind: method
        summary: Generate a token for the current time using a callback
        arguments:
          -
            name: completion
            summary: The function to call when the token is ready
            type:
              arguments:
                -
                  name: token
                  type: String
                  nullable: true
                  summary: The generated token, or `null` if there was an error
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when calling the completion handler
      -
        name: generateToken
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: String
            summary: The generated token
        summary: Generate a token for the current time using a promise
      -
        name: generateTokenForDate
        kind: method
        summary: Generate a token for the given date using a callback
        arguments:
          -
            name: date
            type: JSDate
            summary: The date to use in the token calculations
          -
            name: completion
            summary: The function to call when the token is ready
            type:
              arguments:
                -
                  name: token
                  type: String
                  nullable: true
                  summary: The generated token, or `null` if there was an error
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when calling the completion handler
        description: |
          Useful when verifying a token for dates other than now to account for
          differences in clocks between the client and server
      -
        name: generateTokenForDate
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: String
            summary: The generated token
        summary: Generate a token for the given date using a promise
        arguments:
          -
            name: date
            type: JSDate
            summary: The date to use in the token calculations
        description: |
          Useful when verifying a token for dates other than now to account for
          differences in clocks between the client and server
  -
     name: Properties
     members:
      -
        name: secretData
        type: JSData
        summary: The secret key data used to generate a unique one time password
      -
        name: numberOfDigits
        type: Number
        summary: The number of digits in a generated token
        description: |
          Typically `6` or `8`
      -
        name: timePeriod
        type: Number
        summary: The time window used for generating tokens
        description: |
          Typically `30`, but can be customized
      -
        name: startDate
        type: JSDate
        summary: The starting date to use in calculations
        description: |
          Typically the UNIX epoch, but can be customized
  -
    name: Storage Representation
    members:
      -
        name: DictionaryRepresentation
        suffix: type
        kind: dictionary
        summary: The fields of one time password's dictionary representation
        topics:
          -
            name: Properties
            members:
              -
                name: secret
                type: String
                summary: A base-64 encoding of the password's `secretData`
              -
                name: digits
                type: Number
                summary: The password's `numberOfDigits`
              -
                name: period
                type: Number
                summary: The password's `timePeriod`
              -
                name: start
                type: Number
                summary: The unix timestamp of the password's `startDate`
      -
        name: dictionaryRepresentation
        kind: method
        type: DictionaryRepresentation
        summary: Get the metadata in a dictionary format suitable for simple
          encodings like JSON
        description: |
          You can use this representation to recreate the secure password 
          object with `initWithDictionary()`
  -
    name: URL Representation
    members:
      -
        name: urlForUsername
        kind: method
        summary: Generate a URL for the one-time-password, commonly used in
          QR codes.
        type: JSURL
        arguments:
          -
            name: username
            type: String
            summary: The username for the account
          -
            name: domain
            type: String
            summary: The issuer of the one time password