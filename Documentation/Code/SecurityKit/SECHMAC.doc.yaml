copyright: Copyright Â© 2020 Breakside Inc.
kind: class
inherits: JSObject
introduced: 2020.1.0
summary: Create a Hash-based Message Authentication Code (MAC)
description: |
  An HMAC is used to sign data
topics:
  -
    name: Algorithm Support
    members:
      -
        name: Algorithm
        kind: enum
        summary: The hash algorithms that `SecurityKit` supports
        topics:
          -
            name: Options
            members:
              -
                name: sha256
                summary: The SHA256 hash
              -
                name: sha384
                summary: The SHA384 hash
              -
                name: sha512
                summary: The SHA512 hash
  -
    name: Creating a Hasher
    members:
      -
        name: initWithAlgorithm
        kind: init
        summary: Create a hasher for the given algorithm
        arguments:
          -
            name: algorithm
            type: Algorithm
            summary: The hashing algorithm to use
        description: |
          After creating a hasher, you'll need to set a `key` first.  Then call
          `update()` any number of times and finally call `digest()` to compute
          the hash.
  -
    name: Key Management
    members:
      -
        name: key
        type: SECKey
        summary: A key that must be set before calling `update()`
      -
        name: createKey
        kind: method
        summary: Create a new random key and receive a callback with the result
        arguments:
          -
            name: completion
            type:
              arguments:
                -
                  name: key
                  type: SECKey
                  nullable: true
                  summary: The new key, or `null` on error
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when calling the completion
              function
      -
        name: createKey
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: SECKey
            summary: The new key
        summary: Create a new random key and provide the result with a promise
      -
        name: createKeyWithData
        kind: method
        summary: Create a `SECKey` from raw data and receive a callback with the
          result
        arguments:
          -
            name: keyData
            type: JSData
            summary: The key's data, obtained from an external source
          -
            name: completion
            type:
              arguments:
                -
                  name: key
                  type: SECKey
                  nullable: true
                  summary: The new key, or `null` on error
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when calling the completion
              function
      -
        name: createKeyWithData
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: SECKey
            summary: The new key
        summary: Create a `SECKey` from raw data and provide the result with a promise
        arguments:
          -
            name: keyData
            type: JSData
            summary: The key's data, obtained from an external source
      -
        name: createKeyFromJWK
        introduced: 2021.8.2
        kind: method
        summary: Create a `SECKey` from a jwk and receive a callback with the
          result
        arguments:
          -
            name: jwk
            type: JSONWebKey
            summary: The JWK that contains the key data
          -
            name: completion
            type:
              arguments:
                -
                  name: key
                  type: SECKey
                  nullable: true
                  summary: The new key, or `null` on error
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` when calling the completion
              function
      -
        name: createKeyFromJWK
        introduced: 2021.8.2
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: SECKey
            summary: The new key
        summary: Create a `SECKey` from a jwk and provide the result with a promise
        arguments:
          -
            name: jwk
            type: JSONWebKey
            summary: The JWK that contains the key data
  -
    name: Generating a Signature
    members:
      -
        name: update
        kind: method
        summary: Add the data chunk to the hash calculation
        arguments:
          -
            name: data
            type: JSData
            summary: The data chunk to hash
      -
        name: sign
        kind: method
        summary: Finish the hash and provide the result in a callback
        arguments:
          -
            name: completion
            type:
              arguments:
                -
                  name: signature
                  type: JSData
                  nullable: true
                  summary: The signature, or `null` if there was an error
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this` in the completion function call
        description: |
          You can call `hexStringRepresentation()` on the result to get the
          signature in string form.
      -
        name: digest
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: JSData
            summary: The signature
        summary: Finish the signature and provide the result in a promise
        description: |
          You can call `hexStringRepresentation()` on the result to get the
          signature in string form.