copyright: Copyright Â© 2020 Breakside Inc.
kind: class
inherits: JSObject
introduced: 2020.26.0
summary: Securely hash a password for storage or use as key data
description: |
  Uses PBKDF2 to hash a password.
topics:
  -
    name: Creating Secure Password Data
    members:
      -
        name: createWithPlainPassword
        kind: method
        static: true
        summary: Create a derived password object from a plaintext password using a callback
        arguments:
          -
            name: plainPassword
            type: String
            summary: The user-provided password that will be used to derive a secure hash
          -
            name: length
            type: Number
            summary: The desired length of the derived data in bytes
          -
            name: iterations
            type: Number
            summary: The number of PBKDF2 iterations to perform
          -
            name: hash
            type: SECHash.Algorithm
            summary: The hash algorithm to use
          -
            name: completion
            type:
              arguments:
                -
                  name: password
                  type: SECPassword
                  summary: The derived secure password, or `null` if there was an error
          -
            name: target
            type: any
            summary: The object to use as `this` when calling `completion`
      -
        name: initWithPBKDF2Data
        kind: init
        summary: Create a password from already-derived data and metadata
        arguments:
          -
            name: pbkdf2Data
            type: JSData
            summary: The previously derived data
          -
            name: salt
            type: JSData
            summary: The salt used when deriving the data
          -
            name: iterations
            type: Number
            summary: The number of iterations used when deriving the data
          -
            name: hash
            type: SECHash.Algorithm
            summary: The hash algorithm used when deriving the data
      -
        name: initWithDictionary
        kind: init
        summary: Create a password from a dictionary of values previously
          generated by `dictionaryRepresentation()`
        arguments:
          -
            name: dictionary
            type: object
            summary: A dictionary of properties previously generated by `dictionaryRepresentation()`
  -
    name: Metadata
    members:
      -
        name: pbkdf2Data
        type: JSData
        summary: The data derived from the original user-provided plain password
      -
        name: salt
        type: JSData
        summary: The random salt used
      -
        name: iterations
        type: Number
        summary: The number of iterations used
      -
        name: hash
        type: SECHash.Algorithm
        summary: The hash algorithm used
  -
    name: Storage Representations
    members:
      -
        name: dictionaryRepresentation
        kind: method
        summary: Get the metadata in a dictionary format suitable for simple
          encodings like JSON
        description: |
          You can use this representation to recreate the secure password 
          object with `initWithDictionary()`