copyright: Copyright Â© 2020 Breakside Inc.
kind: class
inherits: JSObject
introduced: 2020.33.0
environment: html
summary: Use the local device to authenticate a user with a built-in authenticator
  or an external security key
description: |
  Useful for two-factor authentation with a hardware device that can generate
  keypairs for authentation.
topics:
  -
    name: Creating an Authentication object
    members:
      -
        name: shared
        static: true
        type: SECDeviceAuthentication
        summary: The shared authentication instance
  -
    name: Public Key Authentication
    members:
      -
        name: createPublicKey
        kind: method
        summary: Create a new public key using a callback for authenticating a user
        arguments:
          -
            name: registration
            type: PublicKeyRegistration
          -
            name: completion
            type:
              arguments:
                -
                  name: result
                  type: RegistrationResult
                  nullable: true
                  summary: The created key associated information, or `null` if
                    a key could not be created
          -
            name: target
            type: any
            default: "undefined"
            summary: The object to use as `this`() when calling `completion`()
      -
        name: createPublicKey
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: RegistrationResult
            summary: The created key associated information
        summary: Create a new public key using a promise for authenticating a user
        arguments:
          -
            name: registration
            type: PublicKeyRegistration
      -
        name: authenticate
        kind: method
        summary: Authenticate a user by having the device sign some random challenge data
        arguments:
          -
            name: request
            type: PublicKeyAuthentication
            summary: The authentication request
          -
            name: completion
            type:
              arguments:
                name: result
                type: AuthenticationResult
                nullable: true
                summary: The result of signing the challenge data
          -
            name: target
            type: any
            default: "undefined"
            summary: The object to use as `this`() when calling `completion`()
      -
        name: authenticate
        suffix: promise
        kind: method
        type: Promise
        promise:
          resolve:
            type: AuthenticationResult
            summary: The result of signing the challenge data
        summary: Authenticate a user by having the device sign some random challenge data
        arguments:
          -
            name: request
            type: PublicKeyAuthentication
            summary: The authentication request
      -
        name: hasPlatformAuthenticator
        introduced: 2021.12.0
        kind: method
        summary: Check if the device has a platform authenticator like a fingerprint
          reader or a face scanner, using a callback
        arguments:
          -
            name: completion
            type:
              arguments:
                -
                  name: hasAuthenticator
                  type: boolean
                  summary: The result, whether the device has a platform authenticator
          -
            name: target
            type: object
            default: "undefined"
            summary: The object to use as `this`() when calling `completion`()
      -
        name: hasPlatformAuthenticator
        suffix: promise
        introduced: 2021.12.0
        kind: method
        type: Promise
        promise:
          resolve:
            type: boolean
            summary: The result, whether the device has a platform authenticator
        summary: Check if the device has a platform authenticator like a fingerprint
          reader or a face scanner, using a promise
      -
        name: PublicKeyRegistration
        kind: class
        anonymous: true
        summary: The registration object to use when creating a new public key
          with `createPublicKey()`
        topics:
          -
            name: Properties
            members:
              -
                name: providerName
                type: String
                nullable: true
                summary: The display name identifying the entity that is requesting
                  authentication, typically your company or app name
              -
                name: challengeData
                type: JSData
                nullable: true
                summary: The random data to be signed by the private key counterpart
                  to the returned public key
                description: |
                  Typically challenge data is provided by a server than can
                  independently verify the signature
              -
                name: supportedAlgorithms
                type: SECSign.Algorithm[]
                nullable: true
                summary: The the algorithms that can be used to create the new public key
                description: |
                  Priority is highest for the first item in the list and lowest for the last item.

                  Defaults to:

                  ````
                  [
                    SECSign.Algorithm.ellipticCurveSHA512,
                    SECSign.Algorithm.ellipticCurveSHA384,
                    SECSign.Algorithm.ellipticCurveSHA256,
                    SECSign.Algorithm.rsaSHA512,
                    SECSign.Algorithm.rsaSHA384,
                    SECSign.Algorithm.rsaSHA256
                  ]
                  ````
              -
                name: userId
                type: String
                nullable: true
                summary: A unique id for the user that will be associated with this public key
              -
                name: accountName
                type: String
                nullable: true
                summary: The display name for the user's account, to help distinguish it
                  from other accounts
                description: |
                  Defaults to `providerName + " User"`
              -
                name: domain
                type: String
                environment: html
                nullable: true
                summary: An alternative domain to use when matching keys
                description: |
                  Defaults to the current page's domain.  Can only be the page's
                  domain or a higher level domain with the same suffix.
              -
                name: platform
                introduced: 2021.12.0
                type: boolean
                nullable: true
                summary: Only allow a platform authenticator like a fingerprint
                  reader or a face scanner
      -
        name: RegistrationResult
        kind: class
        anonymous: true
        summary: The result of authenticating by singing a challenge
        topics:
          -
            name: Properties
            members:
              -
                name: name
                introduced: 2024.41.0
                type: String
                summary: A suggested display name for the public key
                description: |
                  If the authenticator doesn't provide a name, we'll try to
                  generate a name based on the platform.

                  May return an empty string.
              -
                name: jwk
                type: SECJSONWebToken.JSONWebKey
                summary: The public key that was created
                description: |
                  The `kid`() property of the JWK can be used to uniquely identify the key.
              -
                name: challenge
                type: JSData
                summary: An echo of the callenge data
                note: |
                  If the signing was done in the HTML environment, the signature
                  conforms to WebAuthn standards and includes more input data
                  than just the challenge.  Rather than inspecting this
                  `challenge` property, You'll want to verify that the
                  `clientData` includes the correct challenge in its JSON structure.
              -
                name: webauthn
                type: RegistrationWebAuthn
                nullable: true
                summary: More information required to verify a WebAuthn generated signature
                important: |
                  If present, indicates that a WebAuthn attestation is provided
                  to perform verification of the key ownership and integrity
      -
        name: RegistrationWebAuthn
        kind: class
        anonymous: true
        summary: The extra properties for a WebAuthn signature, matching the
          output of `PublicKeyCredential.toJSON`()
        topics:
          -
            name: Properties
            members:
              -
                name: id
                type: String
                summary: The `PublicKeyCredential.id`, which should match the
                  `kid`() from the result JWK
              -
                name: rawId
                type: String
                summary: The `PublicKeyCredential.id`, which should match the
                  `kid`() from the result JWK
              -
                name: authenticatorAttachment
                type: String
                summary: The `PublicKeyCredential.authenticatorAttachment`
              -
                name: type
                type: String
                summary: The `PublicKeyCredential.type`, which should be `"public-key"`
              -
                name: response
                type: AttestationResponse
                summary: An object with details of the WebAuthn attestation
          -
            name: Response Details
            members:
              -
                name: AttestationResponse
                kind: class
                anonymous: true
                summary: The WebAuthn response attributes for key registration,
                  including attesation data
                topics:
                  -
                    name: Properties
                    members:
                      -
                        name: clientDataJSON
                        type: String
                        summary: base64-url encoded JSON object, which should include
                          a `challenge` property.
                      -
                        name: authenticatorData
                        type: String
                        summary: base64-url encoded data, extracted from `attestationObject`
                          for convinence
                      -
                        name: attestationObject
                        type: String
                        summary: base64-url encoded CBOR object
      -
        name: PublicKeyAuthentication
        kind: class
        anonymous: true
        summary: The authentication request object to use with `authenticate()`
        topics:
          -
            name: Properties
            members:
              -
                name: challengeData
                type: JSData
                summary: The random data to be signed by the private key counterpart
                  to the returned public key
                description: |
                  Typically challenge data is provided by a server than can
                  independently verify the signature
              -
                name: domain
                type: String
                environment: html
                nullable: true
                summary: An alternative domain to use when matching keys
                description: |
                  Defaults to the current page's domain.  Can only be the page's
                  domain or a higher level domain with the same suffix.
              -
                name: allowedKeyIDs
                type: String[]
                nullable: true
                summary: The `kid`s of previously registered keys for the account
                description: |
                  Useful when doing two factor authentication to limit the acceptable
                  keys to only those that have been assigned to the account.
              -
                name: platform
                introduced: 2021.12.0
                type: boolean
                nullable: true
                summary: Only authenticate with a platform authenticator like
                  a fingerprint reader or a face scanner
      -
        name: AuthenticationResult
        kind: class
        anonymous: true
        summary: The result of authenticating by singing a challenge
        topics:
          -
            name: Properties
            members:
              -
                name: kid
                type: String
                summary: The key id for the public key counterpart of the private key that signed the request
                description: |
                  Used to uniquely identify the key on your server
              -
                name: challenge
                type: JSData
                summary: An echo of the callenge data
                note: |
                  If the signing was done in the HTML environment, the signature
                  conforms to WebAuthn standards and includes more input data
                  than just the challenge.  Rather than inspecting this
                  `challenge` property, You'll want to verify that the
                  `clientData` includes the correct challenge in its JSON structure.
              -
                name: signature
                type: JSData
                summary: The signature generated by signing the challenge data
                note: |
                  If the signing was done in the HTML environment, the signature
                  conforms to WebAuthn standards and includes more input data
                  than just the challenge.  See the `webauthn` property for
                  all the data required to verify the signature
              -
                name: webauthn
                type: SignatureWebAuthn
                nullable: true
                summary: More information required to verify a WebAuthn generated signature
                important: |
                  If present, indicates that the `signature` includes more input data than
                  just the challenge.  Specifically, the signature was done over
                  `authData || sha256(clientData)`.
      -
        name: SignatureWebAuthn
        kind: class
        anonymous: true
        summary: The extra properties for a WebAuthn signature, matching the
          output of `PublicKeyCredential.toJSON()`
        topics:
          -
            name: Properties
            members:
              -
                name: id
                type: String
                summary: The `PublicKeyCredential.id`, which should match the
                  `kid`() from the result JWK
              -
                name: rawId
                type: String
                summary: The `PublicKeyCredential.id`, which should match the
                  `kid`() from the result JWK
              -
                name: authenticatorAttachment
                type: String
                summary: The `PublicKeyCredential.authenticatorAttachment`
              -
                name: type
                type: String
                summary: The `PublicKeyCredential.type`, which should be `"public-key"`
              -
                name: response
                type: AuthenticationResponse
                summary: An object with details of the WebAuthn response
          -
            name: Response Details
            members:
              -
                name: AuthenticationResponse
                kind: class
                anonymous: true
                summary: The WebAuthn response attributes for key registration,
                  including attesation data
                topics:
                  -
                    name: Properties
                    members:
                      -
                        name: clientDataJSON
                        type: String
                        summary: base64-url encoded JSON object, which should include
                          a `challenge` property.
                      -
                        name: authenticatorData
                        type: String
                        summary: base64-url encoded data, extracted from `attestationObject`
                          for convinence
                      -
                        name: signature
                        type: String
                        summary: base64-url encoded data of the signature to check