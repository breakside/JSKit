worker_processes {{WORKER_PROCESSES}};

events {
    worker_connections  {{WORKER_CONNECTIONS}};
}

http {
    types {
        text/html                   html;
        text/css                    css;
        application/javascript      js;

        application/json            json;
        text/xml                    xml;
        text/plain                  txt;

        image/gif                   gif;
        image/jpeg                  jpeg jpg;
        image/png                   png;
        image/svg+xml               svg svgz;
        application/pdf             pdf;

        application/font-woff       woff;
        application/x-font-ttf      ttf;

        application/manifest+json   webmanifest;

        # REQUIRED for app cahce to work
        text/cache-manifest         appcache;
    }

    default_type  application/octet-stream;

    keepalive_timeout  65;

    gzip  on;
    gzip_types text/css application/javascript application/json text/xml text/plain image/svg+xml text/cache-manifest application/x-font-ttf;

    server {
        listen *:{{HTTP_PORT}};
        server_name "";

        access_log logs/access.log combined;
        error_log logs/error.log error;

        root www;

        location = / {
            index index.html;
        }

        location = /index.html {
            # REQUIRED to never cache index.html, so appcache will always work
            expires epoch;
        }

        location = /manifest.appcache {
            # REQUIRED to never cache the manifest, so appcache will always work
            expires epoch;
        }

        location = /service-worker.js {
            # REQUIRED to never cache the service worker, so the latest is always pulled
            expires epoch;
        }

        location = /HTMLAppBootstrapper.js {
            # REQUIRED to never cache the bootstrapper, so the latest is always pulled
            expires epoch;
        }

        location / {
            # REQUIRED to eliminate extra requests for everything else
            expires max;
        }
    }

}
